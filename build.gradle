plugins {
    id "java"
    id "idea"
}

version = '0.6'
ext.majorversion = '0'
ext.minorversion = '6'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()

    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
}

dependencies {
    //compile group: 'se.jiderhamn.classloader-leak-prevention', name: 'classloader-leak-prevention-core', version: '2.6.1'
    //compile group: 'se.jiderhamn', name: 'classloader-leak-prevention', version: '1.15.4'
    //compile group: 'se.jiderhamn', name: 'classloader-leak-prevention', version: '1.15.4'
    compile 'junit:junit:4.12'

    testCompile 'junit:junit:4.12'
    testCompile group: 'se.jiderhamn.classloader-leak-prevention', name: 'classloader-leak-prevention-core', version: '2.6.1'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }

    baseName 'mljdbc'
}

task copyJar(type: Copy) {
    from jar // here it automatically reads jar file produced from jar task
    into "$projectDir/jar"
    rename {'mljdbc-42.1.4.jar'}
}

build.dependsOn copyJar

import org.apache.tools.ant.filters.ReplaceTokens

task processSources(type: Sync) {
//    from 'src/main/java/org/postgresql/util/DriverInfo.java'
    from sourceSets.main.java
exclude 'com'
exclude 'org'
    inputs.property 'majorversion', majorversion
    inputs.property 'minorversion', minorversion
    filteringCharset = 'UTF-8'
    filter(ReplaceTokens, tokens: 
        [
            '$mvn.project.property.parsedversion.osgiversion$': majorversion+'.'+minorversion,
            '$mvn.project.property.parsedversion.majorversion$': majorversion,
            '$mvn.project.property.parsedversion.minorversion$': minorversion
        ])
    into "$buildDir/src"
}

compileJava {
    source = processSources.outputs
}


