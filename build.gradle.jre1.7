plugins {
    id "java"
    id "idea"
}

version = '1.1'
sourceCompatibility = 1.7
targetCompatibility = 1.7
//def bootClasspathStr = "/Program Files/Java/jdk1.7/jre/lib/rt.jar"
def bootClasspathStr = "/MarkLogic/Erie Insurance/rt.jar;/MarkLogic/Erie Insurance/jce.jar"
project.tasks.withType(AbstractCompile, { AbstractCompile ac ->
    ac.options.bootClasspath = bootClasspathStr // options is always there but not defined on AbstractCompile so going to hit it anyway
})
//tasks.withType(JavaCompile) {
//    options.bootstrapClasspath = files("/Program Files/Java/jdk1.7/jre/lib/rt.jar")
//}
//compileJava.options.bootClasspath = "/Program Files/Java/jdk1.7/jre/lib/rt.jar"
compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()

    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
}

dependencies {
    //compile group: 'se.jiderhamn.classloader-leak-prevention', name: 'classloader-leak-prevention-core', version: '2.6.1'
    //compile group: 'se.jiderhamn', name: 'classloader-leak-prevention', version: '1.15.4'
    //compile group: 'se.jiderhamn', name: 'classloader-leak-prevention', version: '1.15.4'
    compile 'junit:junit:4.12'

    testCompile 'junit:junit:4.12'
    testCompile group: 'se.jiderhamn.classloader-leak-prevention', name: 'classloader-leak-prevention-core', version: '2.6.1'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }

    baseName 'mljdbc-jre7-nobegin'
}